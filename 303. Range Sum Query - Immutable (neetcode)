#Both Time complexity: O(1) for each O(n) to build the array 
#Both Space complexity: O(n)


#Prefix Sum 1
class NumArray:
    def __init__(self, nums):
        self.prefix = []
        cur = 0
        for num in nums:
            cur += num
            self.prefix.append(cur)

    def sumRange(self, left, right):
        rightSum = self.prefix[right]
        leftSum = self.prefix[left - 1] if left > 0 else 0
        return rightSum - leftSum


#Prefix Sum 2
class NumArray:
    def __init__(self, nums):
        self.prefix = [0] * (len(nums) + 1)
        for i in range(len(nums)):
            self.prefix[i + 1] = self.prefix[i] + nums[i]
        

    def sumRange(self, left, right):
        return self.prefix[right + 1] - self.prefix[left]
